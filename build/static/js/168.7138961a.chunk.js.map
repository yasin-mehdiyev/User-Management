{"version":3,"file":"static/js/168.7138961a.chunk.js","mappings":"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","sources":["assets/icons/arrowDown/ArrowDown.tsx","assets/icons/arrowUp/ArrowUp.tsx","components/table/index.tsx","config/axios/index.ts","components/input/index.tsx","hooks/useAllUsers.ts","api/users/getAllUsers.ts","pages/UsersPage.tsx","styles/index.ts","utils/consts.ts"],"sourcesContent":["import React from \"react\";\n\ntype IconProps = React.SVGProps<SVGSVGElement>;\n\nconst ArrowDown = ({\n  width = \"16\",\n  height = \"16\",\n  viewBox = \"0 0 16 16\",\n  ...props\n}: IconProps) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox={viewBox}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M12.3359 9.46094L8.39844 13.5859C8.28125 13.7031 8.14062 13.75 8 13.75C7.83594 13.75 7.69531 13.7031 7.57812 13.5859L3.64062 9.46094C3.42969 9.22656 3.42969 8.875 3.66406 8.66406C3.875 8.45312 4.25 8.45312 4.46094 8.6875L7.4375 11.8047V3.83594C7.4375 3.50781 7.67188 3.27344 7.97656 3.27344C8.25781 3.27344 8.5625 3.50781 8.5625 3.83594V11.8047L11.5156 8.6875C11.7266 8.45312 12.1016 8.45312 12.3125 8.66406C12.5469 8.875 12.5469 9.22656 12.3359 9.46094Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport default ArrowDown;\n","import React from \"react\";\n\ntype IconProps = React.SVGProps<SVGSVGElement>;\n\nconst ArrowUp = ({\n  width = \"16\",\n  height = \"16\",\n  viewBox = \"0 0 16 16\",\n  ...props\n}: IconProps) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox={viewBox}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M3.64062 7.5625L7.57812 3.4375C7.69531 3.32031 7.83594 3.27344 8 3.27344C8.14062 3.27344 8.28125 3.32031 8.39844 3.4375L12.3359 7.5625C12.5469 7.79688 12.5469 8.14844 12.3125 8.35938C12.1016 8.57031 11.7266 8.57031 11.5156 8.33594L8.5625 5.21875V13.1875C8.5625 13.5156 8.30469 13.75 8 13.75C7.71875 13.75 7.4375 13.5156 7.4375 13.1875V5.21875L4.46094 8.33594C4.25 8.57031 3.875 8.57031 3.66406 8.35938C3.42969 8.14844 3.42969 7.77344 3.64062 7.5625Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport default ArrowUp;\n","import ArrowDown from \"src/assets/icons/arrowDown/ArrowDown\";\nimport ArrowUp from \"src/assets/icons/arrowUp/ArrowUp\";\nimport { TableWrapper } from \"src/styles\";\n\ntype TableColumn = {\n  key: string;\n  label: string;\n};\n\nexport type SortableTableProps<T> = {\n  data: T[];\n  columns: TableColumn[];\n  onSort: (field: string) => void;\n  sortedField: string | null;\n  sortOrder: \"asc\" | \"desc\";\n  actionsContent?: (user: T) => React.ReactNode;\n};\n\nconst SortableTable = <T extends Record<string, any>>({\n  data,\n  columns,\n  onSort,\n  sortedField,\n  sortOrder,\n  actionsContent,\n}: SortableTableProps<T>) => {\n  return (\n    <TableWrapper>\n      <table>\n        <thead>\n          <tr>\n            {columns.map((column) => {\n              return (\n                <th\n                  key={column.key}\n                  onClick={() => column.key !== \"actions\" && onSort(column.key)}\n                >\n                  {column.label}{\" \"}\n                  {sortedField === column.key &&\n                    column.key !== \"actions\" &&\n                    (sortOrder === \"asc\" ? <ArrowUp /> : <ArrowDown />)}\n                </th>\n              );\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((item) => (\n            <tr key={item.id}>\n              {columns.map((column) => {\n                if (column.key === \"actions\" && actionsContent) {\n                  return (\n                    <td\n                      key={column.key}\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        gap: \"10px\",\n                      }}\n                    >\n                      {actionsContent && actionsContent(item)}\n                    </td>\n                  );\n                }\n                return <td key={column.key}>{item[column.key]}</td>;\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </TableWrapper>\n  );\n};\n\nexport default SortableTable;\n","import axios from 'axios';\nimport { BASE_URL } from 'src/utils/consts';\n\nconst axiosPublic = axios.create({\n  baseURL: BASE_URL,\n  withCredentials: true,\n});\n\nexport { axiosPublic };\n","import React, { ChangeEvent } from 'react';\n\ntype InputProps = {\n  type: string;\n  placeholder: string;\n  value: string;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Input: React.FC<InputProps> = ({ type, placeholder, value, onChange }) => {\n  return (\n    <input\n      type={type}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default Input;\n","import { useEffect, useState } from \"react\";\nimport { getAllUsers } from \"src/api/users\";\nimport { UserResponse } from \"src/api/users/types\";\nimport { OrderStateUnion } from \"src/types\";\n\nexport const useAllUsers = () => {\n  const [users, setUsers] = useState<UserResponse[]>([]);\n  const [searchValue, setSearchValue] = useState<string>(\"\");\n  const [sortedField, setSortedField] = useState<string | null>(null);\n  const [sortOrder, setSortOrder] = useState<OrderStateUnion>(\"asc\");\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { data: usersResponse } = await getAllUsers();\n        setUsers(usersResponse);\n        handleSort(\"name\");\n      } catch (error) {\n        console.log(\"error users: \", error);\n      }\n    })();\n  }, []);\n\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(event.target.value);\n  };\n\n  const handleSort = (field: string) => {\n    setSortedField(field);\n    setSortOrder((prevOrder) => (prevOrder === \"asc\" ? \"desc\" : \"asc\"));\n  };\n\n  const filteredUsers = users.filter(\n    (user) =>\n      user.name.toLowerCase().includes(searchValue.toLowerCase()) ||\n      user.username.toLowerCase().includes(searchValue.toLowerCase()) ||\n      user.email.toLowerCase().includes(searchValue.toLowerCase())\n  );\n\n  const sortedUsers = sortedField\n    ? [...filteredUsers].sort((a, b) => {\n        const valueA = a[sortedField as keyof UserResponse];\n        const valueB = b[sortedField as keyof UserResponse];\n\n        if (valueA < valueB) return sortOrder === \"asc\" ? -1 : 1;\n        if (valueA > valueB) return sortOrder === \"asc\" ? 1 : -1;\n        return 0;\n      })\n    : filteredUsers;\n\n  return {\n    models: {\n      sortedUsers,\n      searchValue,\n      sortedField,\n      sortOrder,\n    },\n    operations: {\n      handleSearch,\n      handleSort,\n    },\n  };\n};\n","import { axiosPublic } from 'src/config/axios/index';\nimport { UserResponse } from 'src/api/users/types';\n\nexport function getAllUsers() {\n  return axiosPublic<UserResponse[]>({\n    url: `/users`,\n    method: 'GET',\n  });\n}\n","import Input from \"src/components/input\";\nimport SortableTable from \"src/components/table\";\nimport { useAllUsers } from \"src/hooks/useAllUsers\";\nimport { InputWrapper, NotFoundUserWrapper, Title } from \"src/styles\";\nimport { userTableColumns } from \"src/utils/consts\";\n\nconst UsersPage = () => {\n  const {\n    models: { sortedUsers, searchValue, sortedField, sortOrder },\n    operations: { handleSearch, handleSort },\n  } = useAllUsers();\n\n  return (\n    <>\n      <Title>Users List</Title>\n      <InputWrapper>\n        <Input\n          type=\"text\"\n          placeholder=\"Search users\"\n          value={searchValue}\n          onChange={handleSearch}\n        />\n      </InputWrapper>\n\n      {sortedUsers.length > 0 && (\n        <SortableTable\n          data={sortedUsers}\n          columns={userTableColumns}\n          onSort={handleSort}\n          sortedField={sortedField}\n          sortOrder={sortOrder}\n          actionsContent={(user) => (\n            <>\n              <a\n                href={`/user/${user.id}/posts`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                View User Posts\n              </a>\n              <a\n                href={`/user/${user.id}/albums`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                View User Albums\n              </a>\n            </>\n          )}\n        />\n      )}\n\n      {searchValue && !sortedUsers.length && (\n        <NotFoundUserWrapper>\n          Not found data when searching user\n        </NotFoundUserWrapper>\n      )}\n    </>\n  );\n};\n\nexport default UsersPage;\n","import styled from \"styled-components\";\n\nexport const TableWrapper = styled.div`\n  margin: 20px;\n  font-family: Arial, sans-serif;\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n\n    th,\n    td {\n      border: 1px solid #ddd;\n      padding: 8px;\n      text-align: left;\n    }\n\n    th {\n      cursor: pointer;\n      background-color: #f2f2f2;\n    }\n\n    th:hover {\n      background-color: #ddd;\n    }\n\n    th:active {\n      background-color: #c6c6c6;\n    }\n\n    tr:hover {\n      background-color: #f5f5f5;\n    }\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 25px;\n\n  input {\n    padding: 5px 10px;\n    border-radius: 5px;\n    border: 1px solid #333;\n  }\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n  font-size: 25px;\n  margin: 15px 0px;\n`;\n\nexport const NotFoundUserWrapper = styled.h3`\n  text-align: center;\n  font-size: 23px;\n  font-style: oblique;\n`;\n\nexport const NotFoundButtonWrapper = styled.div`\n  text-align: center;\n  button {\n    background-color: rgb(40, 196, 219, 1);\n    border: none;\n    border-radius: 4px;\n    padding: 10px 25px;\n    color: #fff;\n    font-size: 16px;\n    font-weight: 600;\n    cursor: pointer;\n  }\n`;\n","export const BASE_URL = \"https://jsonplaceholder.typicode.com\";\n\nexport const userTableColumns = [\n  { key: \"name\", label: \"Name\" },\n  { key: \"username\", label: \"Username\" },\n  { key: \"email\", label: \"Email\" },\n  { key: \"phone\", label: \"Phone\" },\n  { key: \"actions\", label: \"\" },\n];\n\nexport const userAlbumTableColumns = [\n  { key: \"id\", label: \"Id\" },\n  { key: \"title\", label: \"Title\" },\n];\n\nexport const userPostTableColumns = [\n  { key: \"id\", label: \"Id\" },\n  { key: \"title\", label: \"Title\" },\n  { key: \"body\", label: \"Body\" },\n];\n"],"names":["_ref","width","height","viewBox","props","_jsx","fill","xmlns","children","d","data","columns","onSort","sortedField","sortOrder","actionsContent","TableWrapper","_jsxs","map","column","onClick","key","label","ArrowUp","ArrowDown","item","style","display","justifyContent","gap","id","axiosPublic","axios","create","baseURL","BASE_URL","withCredentials","type","placeholder","value","onChange","useAllUsers","users","setUsers","useState","searchValue","setSearchValue","setSortedField","setSortOrder","useEffect","usersResponse","url","method","handleSort","error","console","log","field","prevOrder","filteredUsers","filter","user","name","toLowerCase","includes","username","email","models","sortedUsers","sort","a","b","valueA","valueB","operations","handleSearch","event","target","UsersPage","_Fragment","Title","InputWrapper","Input","length","SortableTable","userTableColumns","href","concat","rel","NotFoundUserWrapper","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","h3","_templateObject3","_templateObject4","NotFoundButtonWrapper","_templateObject5","userAlbumTableColumns","userPostTableColumns"],"sourceRoot":""}